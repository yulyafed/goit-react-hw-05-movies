{"version":3,"file":"static/js/452.5c4a9c96.chunk.js","mappings":"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","sources":["ApiService.js","components/BackLink.styled.js","components/BackLink.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '1a5f55f6d50e6cac082c25ce71739bfe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst LANG = 'en-US';\n\nconst fetchTrendMovies = async () => {\n    try {\n        return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=${LANG}`);\n    } catch (err) {\n        console.log(err);\n    }\n    return null;\n};\n\nconst fetchSearchMovies = async (searchMovie) => {\n    try {\n        return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=${LANG}&query=${searchMovie}`);\n    } catch (err) {\n        console.log(err);\n    }\n    return null;\n};\n\nconst fetchMovieDetails = async (movieId) => {\n    try {\n        return await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=${LANG}`);\n    } catch (err) {\n        console.log(err);\n    }\n    return null;\n};\n\nconst fetchMovieCredits = async (movieId) => {\n    try {\n        return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=${LANG}`);\n    } catch (err) {\n        console.log(err);\n    }\n    return null;\n};\n\nconst fetchMovieReviews = async (movieId) => {\n    try {\n        return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=${LANG}`);\n    } catch (err) {\n        console.log(err);\n    }\n    return null;\n};\n\nexport { fetchTrendMovies, fetchSearchMovies, fetchMovieDetails, fetchMovieCredits, fetchMovieReviews };","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Backlink = styled(Link)`\n  padding: 0.5px;\n  border: 0.2px solid #2a363b;\n  border-radius: 2px;\n  box - shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  text-decoration: none;\n  font-size: 15px;\n  margin-left: 2px;\n\n  color: #2a363b;\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Backlink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <Backlink to={to}>\n      <HiArrowLeft size=\"10\" />\n      {children}\n    </Backlink>\n  );\n};\nBackLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n    display: flex;\n    border-bottom: 1px solid #2a363b;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 300px;\n  height: 400px;\n  height: auto;\n  margin-right: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 40px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleBottom = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 20px;\n`;\n\nexport const TitleNext = styled.h3`\n  margin-top: 40px;\n  margin-bottom: 20px;\n`;\n\nexport const List = styled.ul`\nlist-style: none;\ndisplay: flex;\npadding-left: 0;\n \n`;\n\nexport const Li = styled.li`\nmargin-right: 20px;\n`;\n\nexport const TitleSecond = styled.h1`\n  font-size:18px;\n  font-weight:400;\n  margin-top: 20px;\n  margin-bottom: 15px;\n`;\n\nexport const ListNext = styled.ul`\nborder-bottom: 1px solid #2a363b;\npadding-bottom: 20px;\n`;\n\nexport const LiNext = styled.li`\npadding-bottom: 10px;\n`;\n \n","import { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BackLink } from 'components/BackLink';\nimport { fetchMovieDetails } from 'ApiService';\nimport {\n  Box,\n  Image,\n  Title,\n  TitleBottom,\n  TitleNext,\n  List,\n  Li,\n  TitleSecond,\n  ListNext,\n  LiNext,\n} from 'pages/MovieDetails.styled';\n\n export  default function MovieDetails() {\n  \n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { movieId } = useParams();\n\n  const [moviedetails, setMovieDetails] = useState(null);\n\n  const posterBigUrlPrefix = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    async function updateMovieDetails(id) {\n      const response = await fetchMovieDetails(id);\n      setMovieDetails(response.data);\n    }\n\n    updateMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {moviedetails && (\n        <Box>\n          <Image src={posterBigUrlPrefix + moviedetails.poster_path} alt=\"\" />\n          <div>\n            <Title>\n              {moviedetails.original_title} (\n              {new Date(moviedetails.release_date).getFullYear()})\n            </Title>\n            <p>User Score: {Math.ceil(moviedetails.popularity / 10)}%</p>\n            <TitleBottom>Overview</TitleBottom>\n            <p>{moviedetails.overview}</p>\n            <TitleNext>Genres</TitleNext>\n            <List>\n              {moviedetails.genres.map(genre => {\n                return (\n                  <Li key={genre.id}>\n                    <p> {genre.name} </p>\n                  </Li>\n                );\n              })}\n            </List>\n          </div>\n        </Box>\n      )}\n      <TitleSecond>Additional information</TitleSecond>\n      <ListNext>\n        <LiNext>\n          <Link to=\"cast\" >\n            Cast\n          </Link>\n        </LiNext>\n        <li>\n          <Link to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ListNext>\n\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\n"],"names":["API_KEY","BASE_URL","LANG","fetchTrendMovies","axios","console","log","fetchSearchMovies","searchMovie","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","Backlink","styled","Link","BackLink","to","children","size","Box","Image","Title","TitleBottom","TitleNext","List","Li","TitleSecond","ListNext","LiNext","MovieDetails","backLinkHref","useLocation","state","from","useParams","useState","moviedetails","setMovieDetails","useEffect","id","response","data","updateMovieDetails","src","poster_path","alt","original_title","Date","release_date","getFullYear","Math","ceil","popularity","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}